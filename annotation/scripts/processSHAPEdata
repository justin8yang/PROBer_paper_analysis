#!/usr/bin/env python2

from sys import argv, exit

if len(argv) != 3:
    print("Usage: processSHAPEdata input.adducts output_name")
    exit(-1)

pos = -1
seq = ""
plus = []
minus = []

fin = open(argv[1])
for line in fin:
    if pos >= 0:
        fields = line.strip().split('\t')
        plus.append(int(fields[2]))
        minus.append(int(fields[3]))
        if pos > 0:
            seq += fields[1]
    pos += 1
fin.close()

# Output sequence
rna_id = argv[2][argv[2].rfind("/") + 1:]
fout = open("{}.fa".format(argv[2]), "w")
fout.write(">00_{}\n".format(rna_id))
fout.write(seq + "\n")
fout.close()

# Calculate ML gamma and beta
gamma = [0] * pos
beta = [0] * pos

psum_g = float(minus[0])
psum_b = float(plus[0])
for i in xrange(1, pos):
    psum_g += minus[i]
    psum_b += plus[i]
    
    gamma[i] = minus[i] / psum_g
    beta[i] = plus[i] / psum_b

    if beta[i] > gamma[i]:
        beta[i] = (beta[i] - gamma[i]) / (1.0 - gamma[i])
    else:
        gamma[i] = (minus[i] + plus[i]) / (psum_g + psum_b)
        beta[i] = 0.0


# Output gamma and beta
fout = open("{}.gamma".format(argv[2]), "w")
fout.write(rna_id + "\t" + str(pos - 1 - 6) + "\t" + "\t".join(["{:.10g}".format(x) for x in gamma[1:pos-6]]) + "\n")
fout.close()

fout = open("{}.beta".format(argv[2]), "w")
fout.write(rna_id + "\t" + str(pos - 1 - 6) + "\t" + "\t".join(["{:.10g}".format(x) for x in beta[1:pos-6]]) + "\n")
fout.close()
