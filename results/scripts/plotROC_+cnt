#!/usr/bin/env Rscript

argv = commandArgs(TRUE)
if (length(argv) < 9 || length(argv) > 10) {
   cat("Usage: plotROC_+cnt ground_truth_dir exclude_bp PROBer StructureFold Mod-seq icSHAPE plus_cnt rowList(sep by ,) output_name [legend_position]\n")
   q(status = 1)
}

legendPos = "topleft" # default
if (length(argv) == 10) legendPos = argv[10]

library(PRROC)

genPosList = function(name, ground_truth_dir, exclude_bp) {
  isAC = scan(sprintf("%s/%s.isac", ground_truth_dir, name), what = 0)
  which(isAC[1:(length(isAC) - exclude_bp)] == 1)
}

collectTruth = function(name, ground_truth_dir) {
  scan(sprintf("%s/%s.structure", ground_truth_dir, name), what = 0)
}

collectPROBer = function(pos, file_name) {
  prober = scan(file_name, what = "", skip = pos, nlines = 1)
  as.numeric(prober[3:length(prober)])
}

collectScore = function(pos, file_name) {
  scan(file_name, what = 0.0, skip = pos - 1, nlines = 1)
}

collectCounts = function(pos, file_name) {
  scan(file_name, what = 0.0, skip = pos - 1, nlines = 1)[-1]
}

calculateROC = function(id, estList, truthList, posList) {
  roc.curve(estList[[id]][posList[[id]]], weights.class0 = truthList[[id]][posList[[id]]], curve = T)
}

plotROC = function(id, rRNAs, PROBerRocs, StructureFoldRocs, ModseqRocs, icSHAPERocs, plusCountRocs, legendPos) {
  plot(PROBerRocs[[id]], lwd = 1, col = "red", auc.main = F, main = rRNAs[[id]])
  plot(StructureFoldRocs[[id]], lwd = 1, col = "green", add = T)
  plot(ModseqRocs[[id]], lwd = 1, col = "blue", add = T)
  plot(icSHAPERocs[[id]], lwd = 1, col = "orange", add = T)
  plot(plusCountRocs[[id]], lwd = 1, col = "purple", add = T)

  legends = c(as.expression(bquote(paste("PROBer, AUC = ", .(sprintf("%.2f", PROBerRocs[[id]]$auc))))),
              as.expression(bquote(paste("StructureFold, AUC = ", .(sprintf("%.2f", StructureFoldRocs[[id]]$auc))))),
              as.expression(bquote(paste("Mod-seq, AUC = ", .(sprintf("%.2f", ModseqRocs[[id]]$auc))))),
              as.expression(bquote(paste("icSHAPE, AUC = ", .(sprintf("%.2f", icSHAPERocs[[id]]$auc))))),
              as.expression(bquote(paste("+ Counts, AUC = ", .(sprintf("%.2f", plusCountRocs[[id]]$auc))))))

  legend(legendPos, legend=legends, lty=1, col=c("red", "green", "blue", "orange", "purple"))
  cat(sprintf("PROBer = %.2f, StructureFold = %.2f, Mod-seq = %.2f, icSHAPE = %.2f, plus_Count = %.2f\n", PROBerRocs[[id]]$auc, StructureFoldRocs[[id]]$auc, ModseqRocs[[id]]$auc, icSHAPERocs[[id]]$auc, plusCountRocs[[id]]$auc))
  return(NULL)
}

rRNAs = c("18S_rRNA", "25S_rRNA", "58S_rRNA")
posList = lapply(rRNAs, genPosList, argv[1], as.numeric(argv[2]))
truthList = lapply(rRNAs, collectTruth, argv[1])

rowList = as.numeric(unlist(strsplit(argv[8], split = ",")))

PROBerList = lapply(rowList, collectPROBer, argv[3])
StructureFoldList = lapply(rowList, collectScore, argv[4])
ModseqList = lapply(rowList, collectScore, argv[5])
icSHAPEList = lapply(rowList, collectScore, argv[6])
plusCountList = lapply(rowList, collectCounts, argv[7])

PROBerRocs = lapply(1:3, calculateROC, PROBerList, truthList, posList)
StructureFoldRocs = lapply(1:3, calculateROC, StructureFoldList, truthList, posList)
ModseqRocs = lapply(1:3, calculateROC, ModseqList, truthList, posList)
icSHAPERocs = lapply(1:3, calculateROC, icSHAPEList, truthList, posList)
plusCountRocs = lapply(1:3, calculateROC, plusCountList, truthList, posList)

pdf(sprintf("%s.pdf", argv[9]))
null_vec = lapply(1:3, plotROC, rRNAs, PROBerRocs, StructureFoldRocs, ModseqRocs, icSHAPERocs, plusCountRocs, legendPos)
dev.off()
