rule build_cutadapt:
	input: "{name}.tar.gz"
	output: "{name}/bin/cutadapt"
	shell:
		"tar -C {tools_path} -xzf {input} && "
		"cd {wildcards.name} && python setup.py build_ext -i && "
		"cd $OLDPWD && touch {output}"

rule build_samtools:
	input: "{name}.tar.bz2"
	output: "{name}/samtools"
	shell:
		"tar -C {tools_path} -xjf {input} && "
		"cd {wildcards.name} && make && "
		"cd $OLDPWD && touch {output}"

rule build_bowtie:
	input: "{name}-src.zip"
	output: "{name}/bowtie"
	shell:
		"unzip -d {tools_path} {input} && "
		"cd {wildcards.name} && make && "
		"cd $OLDPWD && touch {output}"

rule build_rsem:
	input: "{name}.tar.gz"
	output: expand("{{name}}/{cmd}", cmd = ["rsem-prepare-reference", "rsem-calculate-expression"])
	shell:
		"tar -C {tools_path} -xzf {input} && "
		"cd {wildcards.name} && make && "
		"cd $OLDPWD && touch {output}"

rule build_PROBer:
	input: "{name}.tar.gz"
	output: expand("{{name}}/build/src/{cmd}", cmd = ["PROBer", "PROBer-single-batch-estimate"])
	shell:
		"tar -C {tools_path} -xzf {input} && "
		"mkdir -p {wildcards.name}/build && cd {wildcards.name}/build && cmake .. && make && "
		"cd $OLDPWD && touch {output}"
